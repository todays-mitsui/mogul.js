module.exports = [
  'i(x) = x',
  'k(x, y) = x',
  's(x, y, z) = x(z)(y(z))',

  // 論理演算
  'true  = x => y => x',
  'false = x => y => y',
  'if(bool, then, else) = bool(then)(else)',

  'not(x) = x(false)(true)',
  'and(x, y) = x(y)(false)',
  'or(x, y)  = x(true)(y)',
  'xor(x, y) = x(not(y))(y)',

  // リスト操作
  'cons(x, y) = f => (f(x)(y))',
  'car(x) = x(true)',
  'cdr(x) = x(false)',

  'Nil = false',
  'isNil(x) = x(_=>false)(true)',

  // 不動点コンビネーター
  'Y(f) = (x => f(x(x)))(x => f(x(x)))',

  // チャーチ数 演算
  'isZero(n) = n(_ => false)(true)',

  'succ(n) = f => x => f(n(f)(x))',  // 後者関数

  'add(m, n) = f => x => m(f)(n(f)(x))',
  'mul(m, n) = f => m(n(f))',
  'pow(m, n) = n(m)',

  'pred(n) = f => x => n(g => h => h(g(f)))(u => x)(u => u)',  // 前者関数

  'sub(m, n) = n(pred)(m)',

  'gte(m, n) = isZero(sub(n)(m))',
  'lte(m, n) = isZero(sub(m)(n))',
  'eq(m, n)  = and(gte(m)(n))(lte(m)(n))',

  // チャーチ数
  '0 = f => x => x',
  '1 = f => x => f(x)',
  '2 = f => x => f(f(x))',
  '3 = f => x => f(f(f(x)))',
  '4 = s(i)(i)(2)',  // 2^2 -> 4
  '5 = f => x => f(f(f(f(f(x)))))',
  '6 = mul(2)(3)',
  '7 = f => x => f(f(f(f(f(f(f(x)))))))',
  '8 = 3(2)',  // 2^3 -> 8
  '9 = 2(3)',  // 3^2 -> 9

  '10 = mul(2)(5)',
  '11 = add(10)(1)',
  '12 = add(10)(2)',
  '13 = add(10)(3)',
  '14 = add(10)(4)',
  '15 = add(10)(5)',
  '16 = add(10)(6)',
  '17 = add(10)(7)',
  '18 = add(10)(8)',
  '19 = add(10)(9)',

  '20 = mul(2)(10)',
  '21 = add(20)(1)',
  '22 = add(20)(2)',
  '23 = add(20)(3)',
  '24 = add(20)(4)',
  '25 = add(20)(5)',
  '26 = add(20)(6)',
  '27 = add(20)(7)',
  '28 = add(20)(8)',
  '29 = add(20)(9)',

  '30 = mul(3)(10)',
  '31 = add(30)(1)',
  '32 = add(30)(2)',
  '33 = add(30)(3)',
  '34 = add(30)(4)',
  '35 = add(30)(5)',
  '36 = add(30)(6)',
  '37 = add(30)(7)',
  '38 = add(30)(8)',
  '39 = add(30)(9)',

  '40 = mul(4)(10)',
  '41 = add(40)(1)',
  '42 = add(40)(2)',
  '43 = add(40)(3)',
  '44 = add(40)(4)',
  '45 = add(40)(5)',
  '46 = add(40)(6)',
  '47 = add(40)(7)',
  '48 = add(40)(8)',
  '49 = add(40)(9)',

  '50 = mul(5)(10)',
  '51 = add(50)(1)',
  '52 = add(50)(2)',
  '53 = add(50)(3)',
  '54 = add(50)(4)',
  '55 = add(50)(5)',
  '56 = add(50)(6)',
  '57 = add(50)(7)',
  '58 = add(50)(8)',
  '59 = add(50)(9)',

  '60 = mul(6)(10)',
  '61 = add(60)(1)',
  '62 = add(60)(2)',
  '63 = add(60)(3)',
  '64 = add(60)(4)',
  '65 = add(60)(5)',
  '66 = add(60)(6)',
  '67 = add(60)(7)',
  '68 = add(60)(8)',
  '69 = add(60)(9)',

  '70 = mul(7)(10)',
  '71 = add(70)(1)',
  '72 = add(70)(2)',
  '73 = add(70)(3)',
  '74 = add(70)(4)',
  '75 = add(70)(5)',
  '76 = add(70)(6)',
  '77 = add(70)(7)',
  '78 = add(70)(8)',
  '79 = add(70)(9)',

  '80 = mul(8)(10)',
  '81 = add(80)(1)',
  '82 = add(80)(2)',
  '83 = add(80)(3)',
  '84 = add(80)(4)',
  '85 = add(80)(5)',
  '86 = add(80)(6)',
  '87 = add(80)(7)',
  '88 = add(80)(8)',
  '89 = add(80)(9)',

  '90 = mul(9)(10)',
  '91 = add(90)(1)',
  '92 = add(90)(2)',
  '93 = add(90)(3)',
  '94 = add(90)(4)',
  '95 = add(90)(5)',
  '96 = add(90)(6)',
  '97 = add(90)(7)',
  '98 = add(90)(8)',
  '99 = add(90)(9)',

  '100 = mul(10)(10)',
  '101 = add(100)(1)',
  '102 = add(100)(2)',
  '103 = add(100)(3)',
  '104 = add(100)(4)',
  '105 = add(100)(5)',
  '106 = add(100)(6)',
  '107 = add(100)(7)',
  '108 = add(100)(8)',
  '109 = add(100)(9)',

  '110 = mul(11)(10)',
  '111 = add(110)(1)',
  '112 = add(110)(2)',
  '113 = add(110)(3)',
  '114 = add(110)(4)',
  '115 = add(110)(5)',
  '116 = add(110)(6)',
  '117 = add(110)(7)',
  '118 = add(110)(8)',
  '119 = add(110)(9)',

  '120 = mul(12)(10)',
  '121 = add(120)(1)',
  '122 = add(120)(2)',
  '123 = add(120)(3)',
  '124 = add(120)(4)',
  '125 = add(120)(5)',
  '126 = add(120)(6)',
  '127 = add(120)(7)',
  '128 = add(120)(8)',
];